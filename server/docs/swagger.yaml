basePath: /
definitions:
  request.LoginRequest:
    properties:
      captcha:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - captcha
    - password
    - username
    type: object
  response.LoginResponse:
    properties:
      data:
        $ref: '#/definitions/response.UserInfo'
      message:
        type: string
      token:
        type: string
    type: object
  response.MenuGroup:
    properties:
      child_menus:
        items:
          $ref: '#/definitions/response.MenuItem'
        type: array
      parent_menu:
        $ref: '#/definitions/response.MenuItem'
    type: object
  response.MenuItem:
    properties:
      icon:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  response.MenuListResponse:
    properties:
      menu_groups:
        items:
          $ref: '#/definitions/response.MenuGroup'
        type: array
    type: object
  response.UserInfo:
    properties:
      avatar:
        type: string
      email:
        type: string
      roleCode:
        type: string
      userId:
        type: integer
      userRole:
        type: string
      username:
        type: string
    type: object
host: localhost:8000
info:
  contact:
    email: blkcor.dev@gmail.com
    name: blkcor
    url: https://blkcor.me
  description: Gin + React 管理系统的 API 文档
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://www.swagger.io/terms/
  title: GRA API文档
  version: "1.0"
paths:
  /captcha:
    get:
      description: 获取验证码接口
      produces:
      - image/png
      responses:
        "200":
          description: ok
          schema:
            type: string
        "500":
          description: error
          schema:
            type: string
      summary: 获取验证码
      tags:
      - 登录相关接口
  /login:
    post:
      consumes:
      - application/json
      description: 管理登录接口，用户可以通过该接口进行登录。登录时需要提供用户名、密码和验证码。接口会校验用户的合法性、密码和验证码，如果校验成功，则生成
        JWT token 并返回。如果校验失败，则返回相应的错误信息。
      parameters:
      - description: 登录请求参数
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/request.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 登录成功，返回用户信息和 JWT token
          schema:
            $ref: '#/definitions/response.LoginResponse'
        "400":
          description: 参数错误，返回详细错误信息
          schema:
            additionalProperties: true
            type: object
        "401":
          description: 用户认证失败，包括用户名不存在、密码错误或验证码错误
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 服务器内部错误，返回详细错误信息
          schema:
            additionalProperties: true
            type: object
      summary: 登录
      tags:
      - 登录相关接口
  /v1/menu:
    get:
      description: 获取用户菜单接口
      produces:
      - application/json
      responses:
        "200":
          description: 获取菜单成功，返回当前用户拥有的菜单信息
          schema:
            $ref: '#/definitions/response.MenuListResponse'
        "400":
          description: 参数错误，返回详细错误信息
          schema:
            additionalProperties: true
            type: object
        "401":
          description: 用户认证失败，包括用户名不存在、密码错误或验证码错误
          schema:
            additionalProperties: true
            type: object
        "500":
          description: 服务器内部错误，返回详细错误信息
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: 获取菜单
      tags:
      - 菜单相关接口
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
